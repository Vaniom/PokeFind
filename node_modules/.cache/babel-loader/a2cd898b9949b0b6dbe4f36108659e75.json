{"ast":null,"code":"var _jsxFileName = \"/Users/florentpianet/Documents/React/pokefind/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon'; // init pokeAPI call\n\nconst pokedex = require('pokedex-promise-v2');\n\nconst P = new pokedex(); // Init  pokemon call for translation\n\nconst pokemonNameSearch = require('pokemon');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      frenchName: '',\n      height: 0,\n      weight: 0,\n      speciesName: '',\n      speciesData: {},\n      pokemonDescriptions: []\n    };\n\n    this.addPokemon = pokemon => {\n      let oldPokemon = [];\n      let newPokemon = [...oldPokemon, pokemon];\n      this.setState({\n        pokemon: newPokemon\n      });\n    };\n\n    this.addFromDefaultSearch = () => {\n      //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n      this.state.pokemon.map(pokemonElt => {\n        return this.setState({\n          height: pokemonElt.height / 10,\n          weight: pokemonElt.weight / 10,\n          speciesName: pokemonElt.species.name\n        });\n      });\n    };\n\n    this.addSpeciesData = () => {\n      const that = this;\n      P.getPokemonSpeciesByName(this.state.speciesName).then(function (response) {\n        console.log(response);\n        that.setState({\n          speciesData: response\n        });\n        that.addFromSpeciesData(response);\n      }).catch(function (error) {\n        console.log('There was an ERROR: ', error);\n      });\n    };\n\n    this.addFromSpeciesData = response => {\n      this.setState({\n        pokemonDescriptions: response.flavor_text_entries\n      });\n    };\n\n    this.searchPokemon = pokemon => {\n      const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n      this.setState({\n        frenchName: formattedInput\n      });\n      const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n      const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n      console.log('englishPokemonName', englishPokemonName); // definition de constantes pour recupÃ©ration dans le callback\n\n      const addPokemon = pokemon => {\n        this.addPokemon(pokemon);\n      };\n\n      const addFromDefaultSearch = () => {\n        this.addFromDefaultSearch();\n      };\n\n      const addSpeciesData = () => {\n        this.addSpeciesData();\n      };\n\n      P.getPokemonByName(englishPokemonName.toLowerCase()).then(function (response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addSpeciesData();\n      }).catch(function (error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"PokeFind\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Trouve tes pokemons !\"), React.createElement(SearchForm, {\n      formTitle: \"Renseigne le nom du pokemon en fran\\xE7ais\",\n      searchPokemon: this.searchPokemon,\n      addPokemon: this.addPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(DisplayPokemon, {\n      pokemon: this.state.pokemon,\n      frenchName: this.state.frenchName,\n      height: this.state.height,\n      weight: this.state.weight,\n      speciesData: this.state.speciesData,\n      pokemonDescriptions: this.state.pokemonDescriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/florentpianet/Documents/React/pokefind/src/components/App.js"],"names":["React","SearchForm","DisplayPokemon","pokedex","require","P","pokemonNameSearch","App","Component","state","pokemon","frenchName","height","weight","speciesName","speciesData","pokemonDescriptions","addPokemon","oldPokemon","newPokemon","setState","addFromDefaultSearch","map","pokemonElt","species","name","addSpeciesData","that","getPokemonSpeciesByName","then","response","console","log","addFromSpeciesData","catch","error","flavor_text_entries","searchPokemon","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","getId","englishPokemonName","getName","getPokemonByName","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    height: 0,\n    weight: 0,\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10, \n        weight: pokemonElt.weight/10, \n        speciesName: pokemonElt.species.name,}))\n    })\n  }\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n  \n\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addSpeciesData();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <h2>Trouve tes pokemons !</h2>\n        <SearchForm formTitle=\"Renseigne le nom du pokemon en franÃ§ais\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        speciesData={this.state.speciesData}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}