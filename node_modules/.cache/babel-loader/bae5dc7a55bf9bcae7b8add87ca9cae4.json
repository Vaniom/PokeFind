{"ast":null,"code":"var _jsxFileName = \"/Users/florentpianet/Documents/React/pokefind/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon'; //deploy test\n// init pokeAPI call\n\nconst pokedex = require('pokedex-promise-v2');\n\nconst P = new pokedex(); // Init  pokemon call for translation\n\nconst pokemonNameSearch = require('pokemon');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      frenchName: '',\n      gameid: 0,\n      height: 0,\n      weight: 0,\n      type: '',\n      genus: '',\n      stats: [],\n      speed: 0,\n      specialDefense: 0,\n      specialAttack: 0,\n      defense: 0,\n      attack: 0,\n      hp: 0,\n      speciesName: '',\n      speciesData: {},\n      pokemonDescriptions: []\n    };\n\n    this.addPokemon = pokemon => {\n      let oldPokemon = [];\n      let newPokemon = [...oldPokemon, pokemon];\n      this.setState({\n        pokemon: newPokemon\n      });\n    };\n\n    this.addFromDefaultSearch = () => {\n      //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n      this.state.pokemon.map(pokemonElt => {\n        return this.setState({\n          height: pokemonElt.height / 10,\n          weight: pokemonElt.weight / 10,\n          speciesName: pokemonElt.species.name,\n          stats: pokemonElt.stats //type: pokemonElt.types[0].type.name\n\n        });\n      });\n    };\n\n    this.getType = () => {\n      this.state.pokemon.map(pokemonElt => {\n        if (pokemonElt.types.slot === \"1\") {\n          return this.setState({\n            type: pokemonElt.types.type.name\n          });\n        }\n      });\n    };\n\n    this.addGameid = () => {\n      const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n      let zero = \"\";\n      let gameid = \"\";\n\n      if (id > 9 && id < 100) {\n        zero = \"0\";\n        gameid = zero + id;\n      } else if (id > 0 && id < 10) {\n        zero = \"00\";\n        gameid = zero + id;\n      } else {\n        gameid = id;\n      }\n\n      return this.setState({\n        gameid: gameid\n      });\n    };\n\n    this.getStats = () => {\n      this.state.stats.map(elt => {\n        if (elt.stat.name === \"hp\") {\n          this.setState({\n            hp: elt.base_stat\n          });\n        } else if (elt.stat.name === \"speed\") {\n          this.setState({\n            speed: elt.base_stat\n          });\n        } else if (elt.stat.name === \"special-defense\") {\n          this.setState({\n            specialDefense: elt.base_stat\n          });\n        } else if (elt.stat.name === \"special-attack\") {\n          this.setState({\n            specialAttack: elt.base_stat\n          });\n        } else if (elt.stat.name === \"defense\") {\n          this.setState({\n            defense: elt.base_stat\n          });\n        } else if (elt.stat.name === \"attack\") {\n          this.setState({\n            attack: elt.base_stat\n          });\n        }\n      });\n    };\n\n    this.addSpeciesData = () => {\n      const that = this;\n      P.getPokemonSpeciesByName(this.state.speciesName).then(function (response) {\n        console.log(response);\n        that.setState({\n          speciesData: response\n        });\n        that.addFromSpeciesData(response);\n        that.extractType();\n      }).catch(function (error) {\n        console.log('There was an ERROR: ', error);\n      });\n    };\n\n    this.addFromSpeciesData = response => {\n      this.setState({\n        pokemonDescriptions: response.flavor_text_entries\n      });\n    };\n\n    this.extractType = () => {\n      this.state.speciesData.genera.map(entry => {\n        if (entry.language.name === \"fr\") {\n          return this.setState({\n            genus: entry.genus\n          });\n        }\n      });\n    };\n\n    this.displayCard = () => {\n      const cardElt = document.getElementById(\"card-container\");\n      cardElt.style.display = \"block\";\n    };\n\n    this.hideCard = () => {\n      const cardElt = document.getElementById(\"card-container\");\n      cardElt.style.display = \"none\";\n    };\n\n    this.searchPokemon = pokemon => {\n      const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n      this.setState({\n        frenchName: formattedInput\n      });\n      const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n      const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n      console.log('englishPokemonName', englishPokemonName); // definition de constantes pour recupÃ©ration dans le callback\n\n      const addPokemon = pokemon => {\n        this.addPokemon(pokemon);\n      };\n\n      const addFromDefaultSearch = () => {\n        this.addFromDefaultSearch();\n      };\n\n      const addGameid = () => {\n        this.addGameid();\n      };\n\n      const addSpeciesData = () => {\n        this.addSpeciesData();\n      };\n\n      const getStats = () => {\n        this.getStats();\n      };\n\n      const displayCard = () => {\n        this.displayCard();\n      };\n\n      const hideCard = () => {\n        this.hideCard();\n      };\n\n      const getType = () => {\n        this.getType();\n      };\n\n      P.getPokemonByName(englishPokemonName.toLowerCase()).then(function (response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n        getStats();\n        getType();\n        displayCard();\n      }).catch(function (error) {\n        console.log('There was an error : ', error);\n        hideCard();\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Erreur\");\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"PokeFind\"), React.createElement(SearchForm, {\n      formTitle: \"Trouve tes pokemons\",\n      searchPokemon: this.searchPokemon,\n      addPokemon: this.addPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(DisplayPokemon, {\n      pokemon: this.state.pokemon,\n      frenchName: this.state.frenchName,\n      gameid: this.state.gameid,\n      height: this.state.height,\n      weight: this.state.weight,\n      type: this.state.type,\n      stats: this.state.stats,\n      speed: this.state.speed,\n      defense: this.state.defense,\n      attack: this.state.attack,\n      specialAttack: this.state.specialAttack,\n      specialDefense: this.state.specialDefense,\n      hp: this.state.hp,\n      statsTotal: this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack,\n      statsAverage: (this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack) / 6,\n      speciesData: this.state.speciesData,\n      genus: this.state.genus,\n      pokemonDescriptions: this.state.pokemonDescriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/florentpianet/Documents/React/pokefind/src/components/App.js"],"names":["React","SearchForm","DisplayPokemon","pokedex","require","P","pokemonNameSearch","App","Component","state","pokemon","frenchName","gameid","height","weight","type","genus","stats","speed","specialDefense","specialAttack","defense","attack","hp","speciesName","speciesData","pokemonDescriptions","addPokemon","oldPokemon","newPokemon","setState","addFromDefaultSearch","map","pokemonElt","species","name","getType","types","slot","addGameid","id","getId","zero","getStats","elt","stat","base_stat","addSpeciesData","that","getPokemonSpeciesByName","then","response","console","log","addFromSpeciesData","extractType","catch","error","flavor_text_entries","genera","entry","language","displayCard","cardElt","document","getElementById","style","display","hideCard","searchPokemon","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","englishPokemonName","getName","getPokemonByName","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n//deploy test\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    gameid: 0,\n    height: 0,\n    weight: 0,\n    type: '',\n    genus: '',\n    stats: [],\n    speed: 0,\n    specialDefense: 0,\n    specialAttack: 0,\n    defense: 0,\n    attack: 0,\n    hp: 0,\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10,\n        weight: pokemonElt.weight/10,\n        speciesName: pokemonElt.species.name,\n        stats: pokemonElt.stats,\n        //type: pokemonElt.types[0].type.name\n      }))\n    })\n  }\n\n  getType = () => {\n    this.state.pokemon.map((pokemonElt) => {\n      if(pokemonElt.types.slot === \"1\" ) {\n        return (this.setState( {\n          type: pokemonElt.types.type.name\n        }))\n      }\n    })\n  }\n\n  addGameid = () => {\n    const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n    let zero = \"\";\n    let gameid = \"\";\n    if ((id > 9) && (id < 100)) {\n      zero = \"0\";\n      gameid = zero + id;\n\n    } else if ((id > 0) && (id < 10)){\n      zero = \"00\";\n      gameid = zero + id;\n    } else {\n      gameid = id;\n    }\n    return(\n      this.setState({gameid: gameid})\n    )\n  }\n\n  getStats = () => {\n    this.state.stats.map(elt => {\n      if(elt.stat.name === \"hp\") {\n        this.setState({ hp: elt.base_stat })\n      } else if(elt.stat.name === \"speed\") {\n        this.setState( { speed: elt.base_stat })\n      } else if(elt.stat.name === \"special-defense\") {\n        this.setState( { specialDefense: elt.base_stat })\n      } else if(elt.stat.name === \"special-attack\") {\n        this.setState( { specialAttack: elt.base_stat })\n      } else if(elt.stat.name === \"defense\") {\n        this.setState( { defense: elt.base_stat })\n      } else if(elt.stat.name === \"attack\") {\n        this.setState( { attack: elt.base_stat })\n      }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet species\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n      that.extractType();\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n\n  extractType = () => {\n    this.state.speciesData.genera.map((entry) => {\n        if(entry.language.name === \"fr\") {\n          return(\n            this.setState({genus: entry.genus})\n          )\n        }\n    })\n  }\n\n  displayCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"block\";\n  }\n\n  hideCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"none\";\n  }\n\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet pokemon\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addGameid = () => {this.addGameid()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    const getStats = () => {this.getStats()};\n    const displayCard = () => {this.displayCard()};\n    const hideCard = () => {this.hideCard()};\n    const getType = () => {this.getType()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n        getStats();\n        getType();\n        displayCard();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        hideCard();\n        return (<p>Erreur</p>);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <SearchForm formTitle=\"Trouve tes pokemons\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        gameid={this.state.gameid}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        type={this.state.type}\n                        stats={this.state.stats}\n                        speed={this.state.speed}\n                        defense={this.state.defense}\n                        attack={this.state.attack}\n                        specialAttack={this.state.specialAttack}\n                        specialDefense={this.state.specialDefense}\n                        hp={this.state.hp}\n                        statsTotal={this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack}\n                        statsAverage={(this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack) /6}\n                        speciesData={this.state.speciesData}\n                        genus={this.state.genus}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}