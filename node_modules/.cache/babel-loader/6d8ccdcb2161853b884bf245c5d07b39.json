{"ast":null,"code":"var _jsxFileName = \"/Users/florentpianet/Documents/React/pokefind/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon'; // init pokeAPI call\n\nconst pokedex = require('pokedex-promise-v2');\n\nconst P = new pokedex(); // Init  pokemon call for translation\n\nconst pokemonNameSearch = require('pokemon');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      frenchName: '',\n      gameid: 0,\n      height: 0,\n      weight: 0,\n      genus: '',\n      speciesName: '',\n      speciesData: {},\n      pokemonDescriptions: []\n    };\n\n    this.addPokemon = pokemon => {\n      let oldPokemon = [];\n      let newPokemon = [...oldPokemon, pokemon];\n      this.setState({\n        pokemon: newPokemon\n      });\n    };\n\n    this.addFromDefaultSearch = () => {\n      //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n      this.state.pokemon.map(pokemonElt => {\n        return this.setState({\n          height: pokemonElt.height / 10,\n          weight: pokemonElt.weight / 10,\n          speciesName: pokemonElt.species.name\n        });\n      });\n    };\n\n    this.addGameid = () => {\n      this.state.pokemon.game_indices.map(pokemonElt => {\n        if (pokemonElt.version.name === \"white-2\") {\n          console.log(\"OK\");\n          /*return (\n          this.setState({ gameid: pokemonElt.game_index})\n          )*/\n        } else {\n          console.log(\"KO\");\n        }\n      });\n    };\n\n    this.addSpeciesData = () => {\n      const that = this;\n      P.getPokemonSpeciesByName(this.state.speciesName).then(function (response) {\n        console.log(response);\n        that.setState({\n          speciesData: response\n        });\n        that.addFromSpeciesData(response);\n        that.extractType();\n      }).catch(function (error) {\n        console.log('There was an ERROR: ', error);\n      });\n    };\n\n    this.addFromSpeciesData = response => {\n      this.setState({\n        pokemonDescriptions: response.flavor_text_entries\n      });\n    };\n\n    this.extractType = () => {\n      this.state.speciesData.genera.map(entry => {\n        if (entry.language.name === \"fr\") {\n          return this.setState({\n            genus: entry.genus\n          });\n        }\n      });\n    };\n\n    this.searchPokemon = pokemon => {\n      const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n      this.setState({\n        frenchName: formattedInput\n      });\n      const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n      const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n      console.log('englishPokemonName', englishPokemonName); // definition de constantes pour recupÃ©ration dans le callback\n\n      const addPokemon = pokemon => {\n        this.addPokemon(pokemon);\n      };\n\n      const addFromDefaultSearch = () => {\n        this.addFromDefaultSearch();\n      };\n\n      const addGameid = () => {\n        this.addGameid();\n      };\n\n      const addSpeciesData = () => {\n        this.addSpeciesData();\n      };\n\n      P.getPokemonByName(englishPokemonName.toLowerCase()).then(function (response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addSpeciesData();\n      }).catch(function (error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"PokeFind\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Trouve tes pokemons !\"), React.createElement(SearchForm, {\n      formTitle: \"Renseigne le nom du pokemon en fran\\xE7ais\",\n      searchPokemon: this.searchPokemon,\n      addPokemon: this.addPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(DisplayPokemon, {\n      pokemon: this.state.pokemon,\n      frenchName: this.state.frenchName,\n      height: this.state.height,\n      weight: this.state.weight,\n      speciesData: this.state.speciesData,\n      genus: this.state.genus,\n      pokemonDescriptions: this.state.pokemonDescriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/florentpianet/Documents/React/pokefind/src/components/App.js"],"names":["React","SearchForm","DisplayPokemon","pokedex","require","P","pokemonNameSearch","App","Component","state","pokemon","frenchName","gameid","height","weight","genus","speciesName","speciesData","pokemonDescriptions","addPokemon","oldPokemon","newPokemon","setState","addFromDefaultSearch","map","pokemonElt","species","name","addGameid","game_indices","version","console","log","addSpeciesData","that","getPokemonSpeciesByName","then","response","addFromSpeciesData","extractType","catch","error","flavor_text_entries","genera","entry","language","searchPokemon","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","getId","englishPokemonName","getName","getPokemonByName","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    gameid: 0,\n    height: 0,\n    weight: 0,\n    genus: '',\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10,\n        weight: pokemonElt.weight/10,\n        speciesName: pokemonElt.species.name,}))\n    })\n  }\n\n  addGameid = () => {\n    this.state.pokemon.game_indices.map((pokemonElt) => {\n      if (pokemonElt.version.name === \"white-2\") {\n        console.log(\"OK\");\n        /*return (\n        this.setState({ gameid: pokemonElt.game_index})\n        )*/\n      } else {\n        console.log(\"KO\");\n      }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet species\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n      that.extractType();\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n  \n  extractType = () => {\n    this.state.speciesData.genera.map((entry) => {\n        if(entry.language.name === \"fr\") {\n          return(\n            this.setState({genus: entry.genus})\n          )\n        }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet pokemon\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addGameid = () => {this.addGameid()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addSpeciesData();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <h2>Trouve tes pokemons !</h2>\n        <SearchForm formTitle=\"Renseigne le nom du pokemon en franÃ§ais\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        speciesData={this.state.speciesData}\n                        genus={this.state.genus}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}