{"ast":null,"code":"var _jsxFileName = \"/Users/florentpianet/Documents/React/pokefind/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon'; // init pokeAPI call\n\nconst pokedex = require('pokedex-promise-v2');\n\nconst P = new pokedex(); // Init  pokemon call for translation\n\nconst pokemonNameSearch = require('pokemon');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      frenchName: '',\n      gameid: 0,\n      height: 0,\n      weight: 0,\n      genus: '',\n      stats: [],\n      speciesName: '',\n      speciesData: {},\n      pokemonDescriptions: []\n    };\n\n    this.addPokemon = pokemon => {\n      let oldPokemon = [];\n      let newPokemon = [...oldPokemon, pokemon];\n      this.setState({\n        pokemon: newPokemon\n      });\n    };\n\n    this.addFromDefaultSearch = () => {\n      //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n      this.state.pokemon.map(pokemonElt => {\n        return this.setState({\n          height: pokemonElt.height / 10,\n          weight: pokemonElt.weight / 10,\n          speciesName: pokemonElt.species.name,\n          stats: pokemonElt.stats\n        });\n      });\n    };\n\n    this.addGameid = () => {\n      const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n      let zero = \"\";\n      let gameid = \"\";\n\n      if (id > 9 && id < 100) {\n        zero = \"0\";\n        gameid = zero + id;\n      } else if (id > 0 && id < 10) {\n        zero = \"00\";\n        gameid = zero + id;\n      } else {\n        gameid = id;\n      }\n\n      return this.setState({\n        gameid: gameid\n      });\n    };\n\n    this.addSpeciesData = () => {\n      const that = this;\n      P.getPokemonSpeciesByName(this.state.speciesName).then(function (response) {\n        console.log(response);\n        that.setState({\n          speciesData: response\n        });\n        that.addFromSpeciesData(response);\n        that.extractType();\n      }).catch(function (error) {\n        console.log('There was an ERROR: ', error);\n      });\n    };\n\n    this.addFromSpeciesData = response => {\n      this.setState({\n        pokemonDescriptions: response.flavor_text_entries\n      });\n    };\n\n    this.extractType = () => {\n      this.state.speciesData.genera.map(entry => {\n        if (entry.language.name === \"fr\") {\n          return this.setState({\n            genus: entry.genus\n          });\n        }\n      });\n    };\n\n    this.searchPokemon = pokemon => {\n      const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n      this.setState({\n        frenchName: formattedInput\n      });\n      const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n      const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n      console.log('englishPokemonName', englishPokemonName); // definition de constantes pour recupÃ©ration dans le callback\n\n      const addPokemon = pokemon => {\n        this.addPokemon(pokemon);\n      };\n\n      const addFromDefaultSearch = () => {\n        this.addFromDefaultSearch();\n      };\n\n      const addGameid = () => {\n        this.addGameid();\n      };\n\n      const addSpeciesData = () => {\n        this.addSpeciesData();\n      };\n\n      P.getPokemonByName(englishPokemonName.toLowerCase()).then(function (response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n      }).catch(function (error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"PokeFind\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Trouve tes pokemons !\"), React.createElement(SearchForm, {\n      formTitle: \"Renseigne le nom du pokemon en fran\\xE7ais\",\n      searchPokemon: this.searchPokemon,\n      addPokemon: this.addPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(DisplayPokemon, {\n      pokemon: this.state.pokemon,\n      frenchName: this.state.frenchName,\n      gameid: this.state.gameid,\n      height: this.state.height,\n      weight: this.state.weight,\n      speciesData: this.state.speciesData,\n      genus: this.state.genus,\n      pokemonDescriptions: this.state.pokemonDescriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/florentpianet/Documents/React/pokefind/src/components/App.js"],"names":["React","SearchForm","DisplayPokemon","pokedex","require","P","pokemonNameSearch","App","Component","state","pokemon","frenchName","gameid","height","weight","genus","stats","speciesName","speciesData","pokemonDescriptions","addPokemon","oldPokemon","newPokemon","setState","addFromDefaultSearch","map","pokemonElt","species","name","addGameid","id","getId","zero","addSpeciesData","that","getPokemonSpeciesByName","then","response","console","log","addFromSpeciesData","extractType","catch","error","flavor_text_entries","genera","entry","language","searchPokemon","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","englishPokemonName","getName","getPokemonByName","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    gameid: 0,\n    height: 0,\n    weight: 0,\n    genus: '',\n    stats: [],\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10,\n        weight: pokemonElt.weight/10,\n        speciesName: pokemonElt.species.name,\n        stats: pokemonElt.stats}))\n    })\n  }\n\n  addGameid = () => {\n    const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n    let zero = \"\";\n    let gameid = \"\";\n    if ((id > 9) && (id < 100)) {\n      zero = \"0\";\n      gameid = zero + id;\n\n    } else if ((id > 0) && (id < 10)){\n      zero = \"00\";\n      gameid = zero + id;\n    } else {\n      gameid = id;\n    }\n    return(\n      this.setState({gameid: gameid})\n    )\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet species\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n      that.extractType();\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n  \n  extractType = () => {\n    this.state.speciesData.genera.map((entry) => {\n        if(entry.language.name === \"fr\") {\n          return(\n            this.setState({genus: entry.genus})\n          )\n        }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet pokemon\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addGameid = () => {this.addGameid()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        return error;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <h2>Trouve tes pokemons !</h2>\n        <SearchForm formTitle=\"Renseigne le nom du pokemon en franÃ§ais\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        gameid={this.state.gameid}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        speciesData={this.state.speciesData}\n                        genus={this.state.genus}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}