{"ast":null,"code":"var _jsxFileName = \"/Users/florentpianet/Documents/React/pokefind/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon'; //deploy test\n// init pokeAPI call\n\nconst pokedex = require('pokedex-promise-v2');\n\nconst P = new pokedex(); // Init  pokemon call for translation\n\nconst pokemonNameSearch = require('pokemon');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      frenchName: '',\n      gameid: 0,\n      height: 0,\n      weight: 0,\n      genus: '',\n      stats: [],\n      hp: 0,\n      speciesName: '',\n      speciesData: {},\n      pokemonDescriptions: []\n    };\n\n    this.addPokemon = pokemon => {\n      let oldPokemon = [];\n      let newPokemon = [...oldPokemon, pokemon];\n      this.setState({\n        pokemon: newPokemon\n      });\n    };\n\n    this.addFromDefaultSearch = () => {\n      //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n      this.state.pokemon.map(pokemonElt => {\n        return this.setState({\n          height: pokemonElt.height / 10,\n          weight: pokemonElt.weight / 10,\n          speciesName: pokemonElt.species.name,\n          stats: pokemonElt.stats\n        });\n      });\n    };\n\n    this.addGameid = () => {\n      const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n      let zero = \"\";\n      let gameid = \"\";\n\n      if (id > 9 && id < 100) {\n        zero = \"0\";\n        gameid = zero + id;\n      } else if (id > 0 && id < 10) {\n        zero = \"00\";\n        gameid = zero + id;\n      } else {\n        gameid = id;\n      }\n\n      return this.setState({\n        gameid: gameid\n      });\n    };\n\n    this.getHp = () => {\n      this.state.stats.map(elt => {\n        if (elt.stat.name === \"hp\") {\n          this.setState({\n            hp: elt.base_stat\n          });\n        }\n      });\n    };\n\n    this.addSpeciesData = () => {\n      const that = this;\n      P.getPokemonSpeciesByName(this.state.speciesName).then(function (response) {\n        console.log(response);\n        that.setState({\n          speciesData: response\n        });\n        that.addFromSpeciesData(response);\n        that.extractType();\n      }).catch(function (error) {\n        console.log('There was an ERROR: ', error);\n      });\n    };\n\n    this.addFromSpeciesData = response => {\n      this.setState({\n        pokemonDescriptions: response.flavor_text_entries\n      });\n    };\n\n    this.extractType = () => {\n      this.state.speciesData.genera.map(entry => {\n        if (entry.language.name === \"fr\") {\n          return this.setState({\n            genus: entry.genus\n          });\n        }\n      });\n    };\n\n    this.displayCard = () => {\n      const cardElt = document.getElementById(\"card-container\");\n      cardElt.style.display = \"block\";\n    };\n\n    this.hideCard = () => {\n      const cardElt = document.getElementById(\"card-container\");\n      cardElt.style.display = \"none\";\n    };\n\n    this.searchPokemon = pokemon => {\n      const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n      this.setState({\n        frenchName: formattedInput\n      });\n      const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n      const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n      console.log('englishPokemonName', englishPokemonName); // definition de constantes pour recupÃ©ration dans le callback\n\n      const addPokemon = pokemon => {\n        this.addPokemon(pokemon);\n      };\n\n      const addFromDefaultSearch = () => {\n        this.addFromDefaultSearch();\n      };\n\n      const addGameid = () => {\n        this.addGameid();\n      };\n\n      const addSpeciesData = () => {\n        this.addSpeciesData();\n      };\n\n      const getHp = () => {\n        this.getHp();\n      };\n\n      const displayCard = () => {\n        this.displayCard();\n      };\n\n      const hideCard = () => {\n        this.hideCard();\n      };\n\n      P.getPokemonByName(englishPokemonName.toLowerCase()).then(function (response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n        getHp();\n        displayCard();\n      }).catch(function (error) {\n        console.log('There was an error : ', error);\n        hideCard();\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Erreur\");\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"PokeFind\"), React.createElement(SearchForm, {\n      formTitle: \"Trouve tes pokemons\",\n      searchPokemon: this.searchPokemon,\n      addPokemon: this.addPokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(DisplayPokemon, {\n      pokemon: this.state.pokemon,\n      frenchName: this.state.frenchName,\n      gameid: this.state.gameid,\n      height: this.state.height,\n      weight: this.state.weight,\n      stats: this.state.stats,\n      hp: this.state.hp,\n      speciesData: this.state.speciesData,\n      genus: this.state.genus,\n      pokemonDescriptions: this.state.pokemonDescriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/florentpianet/Documents/React/pokefind/src/components/App.js"],"names":["React","SearchForm","DisplayPokemon","pokedex","require","P","pokemonNameSearch","App","Component","state","pokemon","frenchName","gameid","height","weight","genus","stats","hp","speciesName","speciesData","pokemonDescriptions","addPokemon","oldPokemon","newPokemon","setState","addFromDefaultSearch","map","pokemonElt","species","name","addGameid","id","getId","zero","getHp","elt","stat","base_stat","addSpeciesData","that","getPokemonSpeciesByName","then","response","console","log","addFromSpeciesData","extractType","catch","error","flavor_text_entries","genera","entry","language","displayCard","cardElt","document","getElementById","style","display","hideCard","searchPokemon","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","englishPokemonName","getName","getPokemonByName","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n//deploy test\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    gameid: 0,\n    height: 0,\n    weight: 0,\n    genus: '',\n    stats: [],\n    hp: 0,\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10,\n        weight: pokemonElt.weight/10,\n        speciesName: pokemonElt.species.name,\n        stats: pokemonElt.stats}))\n    })\n  }\n\n  addGameid = () => {\n    const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n    let zero = \"\";\n    let gameid = \"\";\n    if ((id > 9) && (id < 100)) {\n      zero = \"0\";\n      gameid = zero + id;\n\n    } else if ((id > 0) && (id < 10)){\n      zero = \"00\";\n      gameid = zero + id;\n    } else {\n      gameid = id;\n    }\n    return(\n      this.setState({gameid: gameid})\n    )\n  }\n\n  getHp = () => {\n    this.state.stats.map(elt => {\n      if(elt.stat.name === \"hp\") {\n        this.setState({\n            hp: elt.base_stat\n        })\n      }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet species\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n      that.extractType();\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n  \n  extractType = () => {\n    this.state.speciesData.genera.map((entry) => {\n        if(entry.language.name === \"fr\") {\n          return(\n            this.setState({genus: entry.genus})\n          )\n        }\n    })\n  }\n\n  displayCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"block\";\n  }\n\n  hideCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"none\";\n  }\n\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet pokemon\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addGameid = () => {this.addGameid()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    const getHp = () => {this.getHp()};\n    const displayCard = () => {this.displayCard()};\n    const hideCard = () => {this.hideCard()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n        getHp();\n        displayCard();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        hideCard();\n        return (<p>Erreur</p>);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <SearchForm formTitle=\"Trouve tes pokemons\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        gameid={this.state.gameid}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        stats={this.state.stats}\n                        hp={this.state.hp}\n                        speciesData={this.state.speciesData}\n                        genus={this.state.genus}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}