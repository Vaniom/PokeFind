{"version":3,"sources":["../node_modules/pokemon/data sync /^/.//.*$","components/SearchForm.js","components/PokemonCard.js","components/DisplayPokemon.js","components/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchForm","state","name","handleSubmit","event","preventDefault","console","log","props","searchPokemon","onSubmit","this","formTitle","type","placeholder","value","onChange","setState","target","React","Component","PokemonCard","showOnlyfrenchDescriptions","entry","index","language","version","key","flavor_text","pokemon","pokemonElement","className","frenchName","gameid","src","alt","genus","height","weight","pokemonDescriptions","hp","speed","attack","defense","specialAttack","specialDefense","statsAverage","toFixed","statsTotal","DisplayPokemon","stats","speciesData","P","require","pokemonNameSearch","App","speciesName","addPokemon","newPokemon","addFromDefaultSearch","pokemonElt","species","getType","types","typeElt","slot","addGameid","getId","getStats","elt","stat","base_stat","addSpeciesData","that","getPokemonSpeciesByName","then","response","addFromSpeciesData","extractType","catch","error","flavor_text_entries","genera","displayCard","document","getElementById","style","display","hideCard","formattedInput","charAt","toUpperCase","substring","toLowerCase","pokemonId","englishPokemonName","getName","getPokemonByName","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba79f750.chunk.js","sourcesContent":["var map = {\n\t\"./de\": 22,\n\t\"./de.json\": 22,\n\t\"./en\": 9,\n\t\"./en.json\": 9,\n\t\"./fr\": 23,\n\t\"./fr.json\": 23,\n\t\"./ja\": 24,\n\t\"./ja.json\": 24,\n\t\"./ko\": 25,\n\t\"./ko.json\": 25,\n\t\"./ru\": 26,\n\t\"./ru.json\": 26,\n\t\"./zh-hans\": 27,\n\t\"./zh-hans.json\": 27,\n\t\"./zh-hant\": 28,\n\t\"./zh-hant.json\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67;","import React from 'react';\n\nclass SearchForm extends React.Component {\n    state = {\n        name: ''\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n        this.props.searchPokemon(this.state);\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <h3>{this.props.formTitle}</h3>\n                <input type=\"text\" \n                        placeholder=\"Nom du pokemon en franÃ§ais\" \n                        value={this.state.value} onChange={(event) => {this.setState({name: event.target.value})}}/>\n                <button type=\"submit\">GO!</button>\n            </form>\n        );\n    }\n}\n\nexport default SearchForm;","import React from 'react';\n\nclass PokemonCard extends React.Component {\n\n    showOnlyfrenchDescriptions = (entry, index) => {\n        if((entry.language.name === \"fr\") && (entry.version.name === \"alpha-sapphire\")) {\n            return(\n                <p id=\"text-description\" key={index}>{entry.flavor_text}</p>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"card-container\">\n            {\n                this.props.pokemon.map(pokemonElement =>\n                <div key={pokemonElement.id} className=\"pokemon-container\">\n                    <h2 id=\"pokemon-name\">{this.props.frenchName}<br /><span id=\"type\">{this.props.type}</span><span id=\"english-name\">(en: {pokemonElement.name})</span></h2>\n                    <p id=\"pkmn-id\">id: {this.props.gameid}</p>\n                    <img src={\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/\" + this.props.gameid + \".png\"} alt=\"\" className=\"pokemonImg\" />\n                    <p id=\"pkmn-description\">{this.props.genus} Taille: {this.props.height}m Poids: {this.props.weight}kg</p>\n                    <h3 id=\"title-description\">Description:</h3>\n                </div>\n                )\n            }\n            {\n                this.props.pokemonDescriptions.map((entry, index) => this.showOnlyfrenchDescriptions(entry, index))\n            }\n            <h3 id=\"base-stats-title\">Stats Base</h3>\n                <div id=\"stats-container\">\n                    <div>PdV: {this.props.hp}</div>\n                    <div>Vitesse: {this.props.speed}</div>\n                    <div>Attaque: {this.props.attack}</div>\n                    <div>DÃ©fense: {this.props.defense}</div>\n                    <div>Attaque spÃ©ciale: {this.props.specialAttack}</div>\n                    <div>DÃ©fense spÃ©ciale: {this.props.specialDefense}</div>\n                </div>\n                <div id=\"stats-resume\">\n                    <div id=\"average\">Moyenne: {this.props.statsAverage.toFixed(2)}</div>\n                    <div id=\"total\">Total: {this.props.statsTotal}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PokemonCard\n","import React from 'react';\nimport PokemonCard from './PokemonCard';\n\nclass DisplayPokemon extends React.Component {\n\n    render() {\n        return(\n            <div id=\"card-wrapper\">\n            <PokemonCard pokemon={this.props.pokemon}\n                        frenchName={this.props.frenchName}\n                        gameid={this.props.gameid}\n                        height={this.props.height}\n                        weight={this.props.weight}\n                        type={this.props.type}\n                        speed={this.props.speed}\n                        defense={this.props.defense}\n                        attack={this.props.attack}\n                        specialAttack={this.props.specialAttack}\n                        specialDefense={this.props.specialDefense}\n                        hp={this.props.hp}\n                        stats={this.props.stats}\n                        statsTotal={this.props.statsTotal}\n                        statsAverage={this.props.statsAverage}\n                        speciesData={this.props.speciesData}\n                        genus={this.props.genus}\n                        pokemonDescriptions={this.props.pokemonDescriptions} />\n            </div>\n        );\n    }\n}\n\nexport default DisplayPokemon;","import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayPokemon from './DisplayPokemon';\n\n//deploy test\n\n// init pokeAPI call\nconst pokedex = require('pokedex-promise-v2');\nconst P = new pokedex();\n\n// Init  pokemon call for translation\nconst pokemonNameSearch = require('pokemon');\n\n\nclass App extends React.Component {\n  state = {\n    pokemon: [],\n    frenchName: '',\n    gameid: 0,\n    height: 0,\n    weight: 0,\n    type: '',\n    genus: '',\n    stats: [],\n    speed: 0,\n    specialDefense: 0,\n    specialAttack: 0,\n    defense: 0,\n    attack: 0,\n    hp: 0,\n    speciesName : '',\n    speciesData: {},\n    pokemonDescriptions: []\n  };\n\n  addPokemon = (pokemon) => {\n    let oldPokemon = [];\n    let newPokemon = [...oldPokemon, pokemon];\n    this.setState({ pokemon: newPokemon });\n  }\n  \n  addFromDefaultSearch = () => {\n    //this.setState({height: this.state.pokemon.height, weight: this.state.pokemon.weight})\n    this.state.pokemon.map((pokemonElt) => {\n      return (this.setState({\n        height: pokemonElt.height/10,\n        weight: pokemonElt.weight/10,\n        speciesName: pokemonElt.species.name,\n        stats: pokemonElt.stats,\n        //type: pokemonElt.types[0].type.name\n      }))\n    })\n  }\n\n  getType = () => {\n    this.state.pokemon.map((pokemonElt) => {\n      pokemonElt.types.map((typeElt) => {\n        if(typeElt.slot === 1 ) {\n          let type = typeElt.type.name;\n          switch (type){\n            case \"water\":\n              this.setState({type: \"Eau\"});\n              break;\n            case \"fire\":\n              this.setState({type: \"Feu\"});\n              break;\n              case \"normal\":\n              this.setState({type: \"Normal\"});\n              break;\n              case \"electric\":\n              this.setState({type: \"Electrik\"});\n              break;\n              case \"grass\":\n              this.setState({type: \"Plante\"});\n              break;\n              case \"ice\":\n              this.setState({type: \"Glace\"});\n              break;\n              case \"fighting\":\n              this.setState({type: \"Combat\"});\n              break;\n              case \"poison\":\n              this.setState({type: \"Poison\"});\n              break;\n              case \"ground\":\n              this.setState({type: \"Sol\"});\n              break;\n              case \"flying\":\n              this.setState({type: \"Vol\"});\n              break;\n              case \"psychic\":\n              this.setState({type: \"Psy\"});\n              break;\n              case \"bug\":\n              this.setState({type: \"Insecte\"});\n              break;\n              case \"rock\":\n              this.setState({type: \"Roche\"});\n              break;\n              case \"ghost\":\n              this.setState({type: \"Spectre\"});\n              break;\n              case \"dragon\":\n              this.setState({type: \"Dragon\"});\n              break;\n              case \"dark\":\n              this.setState({type: \"TÃ©nÃ¨bres\"});\n              break;\n              case \"steel\":\n              this.setState({type: \"Acier\"});\n              break;\n              case \"fairy\":\n              this.setState({type: \"FÃ©e\"});\n              break;\n              default:\n                this.setState({type: type});\n          }\n          /*return (this.setState( {\n            type: typeElt.type.name\n          }))*/\n        }\n      })\n    })\n  }\n\n  addGameid = () => {\n    const id = pokemonNameSearch.getId(this.state.frenchName, 'fr');\n    let zero = \"\";\n    let gameid = \"\";\n    if ((id > 9) && (id < 100)) {\n      zero = \"0\";\n      gameid = zero + id;\n\n    } else if ((id > 0) && (id < 10)){\n      zero = \"00\";\n      gameid = zero + id;\n    } else {\n      gameid = id;\n    }\n    return(\n      this.setState({gameid: gameid})\n    )\n  }\n\n  getStats = () => {\n    this.state.stats.map(elt => {\n      if(elt.stat.name === \"hp\") {\n        this.setState({ hp: elt.base_stat })\n      } else if(elt.stat.name === \"speed\") {\n        this.setState( { speed: elt.base_stat })\n      } else if(elt.stat.name === \"special-defense\") {\n        this.setState( { specialDefense: elt.base_stat })\n      } else if(elt.stat.name === \"special-attack\") {\n        this.setState( { specialAttack: elt.base_stat })\n      } else if(elt.stat.name === \"defense\") {\n        this.setState( { defense: elt.base_stat })\n      } else if(elt.stat.name === \"attack\") {\n        this.setState( { attack: elt.base_stat })\n      }\n    })\n  }\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet species\n\n  addSpeciesData = () => {\n    const that = this;\n    P.getPokemonSpeciesByName(this.state.speciesName)\n    .then(function(response) {\n      console.log(response);\n      that.setState({speciesData: response});\n      that.addFromSpeciesData(response);\n      that.extractType();\n    })\n    .catch(function(error) {\n      console.log('There was an ERROR: ', error);\n    });\n  }\n\n  addFromSpeciesData = (response) => {\n    this.setState({pokemonDescriptions: response.flavor_text_entries});\n  }\n\n  extractType = () => {\n    this.state.speciesData.genera.map((entry) => {\n        if(entry.language.name === \"fr\") {\n          return(\n            this.setState({genus: entry.genus})\n          )\n        }\n    })\n  }\n\n  displayCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"block\";\n  }\n\n  hideCard = () => {\n    const cardElt = document.getElementById(\"card-container\");\n    cardElt.style.display = \"none\";\n  }\n\n// Ajouter ici les methodes d'extraction de donnÃ©es de l'objet pokemon\n  searchPokemon = (pokemon) => {\n    const formattedInput = pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1).toLowerCase();\n    this.setState({frenchName: formattedInput});\n    const pokemonId = pokemonNameSearch.getId(formattedInput, 'fr');\n    const englishPokemonName = pokemonNameSearch.getName(pokemonId, 'en');\n    console.log('englishPokemonName', englishPokemonName);\n    // definition de constantes pour recupÃ©ration dans le callback\n    const addPokemon = (pokemon) => {this.addPokemon(pokemon)};\n    const addFromDefaultSearch = () => {this.addFromDefaultSearch()};\n    const addGameid = () => {this.addGameid()};\n    const addSpeciesData = () => {this.addSpeciesData()};\n    const getStats = () => {this.getStats()};\n    const displayCard = () => {this.displayCard()};\n    const hideCard = () => {this.hideCard()};\n    const getType = () => {this.getType()};\n    P.getPokemonByName(englishPokemonName.toLowerCase())\n      .then(function(response) {\n        console.log(response);\n        addPokemon(response);\n        addFromDefaultSearch();\n        addGameid();\n        addSpeciesData();\n        getStats();\n        getType();\n        displayCard();\n      })\n      .catch(function(error) {\n        console.log('There was an error : ', error);\n        hideCard();\n        return (<p>Erreur</p>);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>PokeFind</h1>\n        <SearchForm formTitle=\"Trouve tes pokemons\" searchPokemon={this.searchPokemon} addPokemon={this.addPokemon}/>\n        <DisplayPokemon pokemon={this.state.pokemon} \n                        frenchName={this.state.frenchName}\n                        gameid={this.state.gameid}\n                        height={this.state.height}\n                        weight={this.state.weight}\n                        type={this.state.type}\n                        stats={this.state.stats}\n                        speed={this.state.speed}\n                        defense={this.state.defense}\n                        attack={this.state.attack}\n                        specialAttack={this.state.specialAttack}\n                        specialDefense={this.state.specialDefense}\n                        hp={this.state.hp}\n                        statsTotal={this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack}\n                        statsAverage={(this.state.speed + this.state.defense + this.state.attack + this.state.hp + this.state.specialDefense + this.state.specialAttack) /6}\n                        speciesData={this.state.speciesData}\n                        genus={this.state.genus}\n                        pokemonDescriptions={this.state.pokemonDescriptions} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}